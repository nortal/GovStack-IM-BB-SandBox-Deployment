---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ $.Release.Namespace }}
  name: x-road-niis-ss
  annotations:
    external-dns.alpha.kubernetes.io/evaluateTargetHealth: 'true'
    external-dns.alpha.kubernetes.io/hostname: "niis-ss.{{ $.Values.global.serviceExt.topLevelDomainName }}"
    service.beta.kubernetes.io/load-balancer-source-ranges: "{{ $.Values.global.serviceExt.subnetAllowList }}"
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2" # Default 6
#    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: ssl
#    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: {{ $.Values.global.serviceExt.acmCertificateArn }}
#    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: '4000'
spec:
  type: LoadBalancer
  selector:
    app: x-road-niis-ss
  ports:
    - port: 4000
      targetPort: 4000
      protocol: TCP
      name: config
    - port: 5500
      targetPort: 5500
      protocol: TCP
      name: messaging
    - port: 5577
      targetPort: 5577
      protocol: TCP
      name: ocsp
    - port: 5588
      targetPort: 5588
      protocol: TCP
      name: for-what-it-is-used2
    - port: 8443
      targetPort: 8443
      protocol: TCP
      name: client-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Release.Namespace }}
  name: x-road-niis-ss
spec:
  selector:
    matchLabels:
      app: x-road-niis-ss
  replicas: 1
  template:
    metadata:
      labels:
        app: x-road-niis-ss
    spec:
      containers:
        - name: xroad-security-server
          image: {{ $.Values.serverImage}}
          imagePullPolicy: Always
          resources:
            requests:
              memory: {{ $.Values.serverMem | default "2Gi" | quote }}
              cpu: "500m"
            limits:
              memory: {{ $.Values.serverMem | default "4Gi" | quote }}
              cpu: "2"
          env:
            - name: XROAD_TOKEN_PIN
              value: Aa0123456789
            - name: XROAD_ADMIN_USER
              value: xrd
            - name: XROAD_ADMIN_PASSWORD
              value: secret
#   We are going to disable external DB for a Demo
#            - name: XROAD_DB_HOST
#              value: x-road-niis-ss-db
#            - name: XROAD_DB_PORT
#              value: '5432'
#            - name: XROAD_DB_PWD
#              value: secret
            - name: XROAD_LOG_LEVEL
              value: INFO
          ports:
            - containerPort: 2080
            - containerPort: 4000
            - containerPort: 5500
            - containerPort: 5577
            - containerPort: 5588
            - containerPort: 8443
#          volumeMounts:
#            - mountPath: /etc/xroad
#              name: xroad-config
          livenessProbe:
            tcpSocket:
              port: 5500
            failureThreshold: 2
            periodSeconds: 60
#   Temporary disable for standalone SS deployment
#
#          startupProbe:
#            # Note! This probe assumes a pre-configured server
#            # uninitialized server would report failure until
#            # configured
#            httpGet:
#              path: /
#              port: 5588
#            failureThreshold: 90
#            periodSeconds: 20
          startupProbe:
            tcpSocket:
              port: 4000
            failureThreshold: 90
            periodSeconds: 20
#      volumes:
#        - name: xroad-config
#          persistentVolumeClaim:
#            claimName: pvc-x-road-niis-ss-config
  strategy:
    type: Recreate
